---
description: Implements intelligent document chunking system that preserves semantic coherence while managing token limits.
globs: **/malmo_chunker.py,**/chunker.py,**/semantic/*.py
alwaysApply: false
---


# semantic-chunking-algorithm

Core Semantic Chunking Implementation:

1. Semantic Unit Detection & Hierarchy
- Implements multi-level semantic unit detection:
  * Chapter boundaries (English "Chapter X", Polish "Rozdział X")
  * Scene transitions within chapters 
  * Thematic unit changes
  * Separator markers ("●", "***") as unit boundaries
- Enforces semantic hierarchy: chunks > units > items
- Minimum semantic requirements: min_units = 5 * min_chunks

2. Boundary Detection Logic
- Primary LLM-based boundary analysis
- Fallback detection pipeline:
  * Secondary model attempt
  * Statistical pattern detection
  * Heuristic boundary identification
  * Default unit creation as final fallback
- Preserves document coherence by keeping related content together

3. Document Structure Analysis
- Identifies semantic paragraph types:
  * Chapter/section headings
  * Markdown blockquotes and lists
  * Code blocks and tables
  * Images and figures
- Determines content attachment rules:
  * Short paragraphs following incomplete sentences
  * Figure/image attachment to preceding content

4. Intelligent Unit Management
- Handles oversized units through smart splitting
- Maintains semantic context during splits
- Enforces minimum unit requirements
- Preserves document structure hierarchy

Relevant Files:
- legacy_src/malmo_chunker.py
- src/e11ocutionist/chunker.py

Business Impact Score: 95
- Core semantic understanding logic
- Critical for maintaining document coherence
- Essential for downstream processing

$END$