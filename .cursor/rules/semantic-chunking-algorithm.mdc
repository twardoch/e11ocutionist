---
description: Rules and logic for semantically chunking text while preserving meaning and structure for AI processing
globs: 
alwaysApply: false
---


# semantic-chunking-algorithm

The semantic chunking system implements specialized rules for breaking documents into meaningful chunks while preserving semantic relationships and hierarchical structure.

Core Components:

1. Document Analysis (Importance: 95)
- Multi-stage semantic boundary detection:
  - Chapter boundaries using multilingual patterns ("Chapter X", "RozdziaÅ‚ X") 
  - Scene transitions and semantic unit detection
  - Minimum 5 units per chunk requirement
  - Token-aware unit sizing

2. Attachment Rules (Importance: 85)
- "Following" elements attach forward
- "Preceding" elements attach backward
- Standalone handling for:
  - Headings
  - Lists 
  - Blockquotes
- Whitespace/formatting preservation

3. Adaptive Chunking Strategy (Importance: 90)
- Chapter-based chunk initiation
- Unit combination until token limit
- Semantic splitting for oversized units
- Hierarchical structure:
  doc -> chunks -> units -> items

4. Semantic Boundary Classification (Importance: 80)
- LLM-based natural boundary identification
- Fallback boundary detection 
- N-item boundary placement based on:
  - Document length
  - Structure patterns
  - Content relationships

5. Recovery Mechanisms (Importance: 75)
- Heuristic unit detection fallback
- Secondary LLM model (Gemini) fallback
- Structure preservation during failures

File Organization:
```
legacy_src/malmo_chunker.py     # Core chunking implementation
src/e11ocutionist/chunker.py    # Modern chunking pipeline
```

$END$