---
description: Documentation of text enhancement processing workflow including sentence restructuring, normalization and emotional markup rules
globs: work/malmo_orator.py,work/malmo_*.py
alwaysApply: false
---


# text-enhancement-pipeline

The text enhancement pipeline implements a multi-stage document processing workflow focused on improving narrative speech quality through structured transformations.

## Core Enhancement Stages (Importance: 95)
1. Sentence Restructuring
- Splits long sentences at logical points while maintaining semantic integrity
- Enforces paragraph punctuation rules
- Preserves XML document hierarchy

2. Word Normalization 
- Language-aware conversion of numeric digits to spelled words
- Symbol transformation to appropriate conjunctions 
- Context-sensitive symbol resolution

3. Punctuation Enhancement
- Parenthetical expression handling with ellipses
- Em/en dash conversion to pause indicators
- Preservation of hyphenated word structures

4. Emotional Markup
- Strategic emphasis tag placement for speech delivery
- Insertion of dramatic pauses using <hr/> tags
- Selective exclamation mark enhancement
- Natural flow maintenance with controlled emphasis density

## Entity Processing (Importance: 85)
- Language-specific named entity recognition
- Pronunciation generation with syllable splitting
- Entity tagging protocol with differentiated markup
- Progressive pronunciation dictionary building
- Context-aware entity relationship tracking

## Document Structure Rules (Importance: 80)
- Chapter boundary preservation
- Scene integrity maintenance
- Semantic unit cohesion
- Nested structure handling
- Multi-language support for headings and chapters

## Speech Synthesis Preparation (Importance: 75)
- Quote normalization for speech synthesis
- Dialog line detection and markup
- Speaker alternation handling
- Break timing standardization
- Voice model compatibility transformations

File Paths:
- work/malmo_orator.py
- work/malmo_entitizer.py
- work/malmo_chunker.py
- work/malmo_11labs.py

$END$