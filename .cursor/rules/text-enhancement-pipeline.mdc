---
description: Document text enhancement workflow rules for optimizing written content for speech synthesis
globs: src/e11ocutionist/orator.py,legacy_src/malmo_orator.py
alwaysApply: false
---


# text-enhancement-pipeline

The text enhancement pipeline implements a four-stage document processing workflow specifically designed to optimize written content for spoken delivery:

## Stage 1: Sentence Restructuring (Importance: 85)
- Divides long sentences at logical points while preserving semantic meaning
- Enforces paragraph endings with proper punctuation 
- Maintains exact wording while improving structure for speech flow
- Handles compound sentences with coordinating conjunctions

## Stage 2: Word Normalization (Importance: 75)
- Context-aware numeric conversion ("42" → "forty-two")
- Language-specific symbol resolution ("/" → "or", "&" → "and")
- Preserves technical terms and domain-specific vocabulary
- Handles abbreviations and acronyms based on domain context

## Stage 3: Punctuation Enhancement (Importance: 80)  
- Converts parenthetical expressions to ellipses for natural pauses
- Transforms em/en dashes into appropriate pause markers
- Maintains hyphenation in compound words
- Adds strategic commas for pacing and clarity

## Stage 4: Emotional Markup (Importance: 90)
- Adds targeted emphasis tags (<em>) for key phrases
- Inserts dramatic pauses (<hr/>) at scene transitions
- Enhances expression through strategic exclamation marks
- Preserves dialog dynamics and speaker transitions

Key Files:
- src/e11ocutionist/orator.py
- legacy_src/malmo_orator.py

The pipeline maintains document integrity while optimizing for spoken delivery through progressive enhancement stages, each building on the previous transformations while preserving semantic meaning.

$END$