---
description: Analyzes and documents data flow between pipeline components for text-to-speech transformation system
globs: src/e11ocutionist/**/*.py,legacy_src/**/*.py
alwaysApply: false
---


# data-flow-diagram

Core Pipeline Data Flow:

1. Input Stage
- Plain text or XML input received
- Text chunked into processable segments (malmo_chunker.py)
- Chunks maintain semantic boundaries via LLM analysis
- Output: XML-formatted chunks with preserved semantics

2. Entity Processing Stage (malmo_entitizer.py)
- Receives chunked XML documents
- Identifies Named Entities of Interest (NEIs)
- Adds pronunciation cues and language context
- Output: XML with <nei> tags and pronunciation metadata

3. Narration Enhancement (malmo_orator.py)
- Processes NEI-tagged content
- Applies four-stage enhancement:
  * Sentence restructuring 
  * Word normalization
  * Punctuation enhancement
  * Emotional emphasis
- Output: Enhanced XML with speech markers

4. Tone Adjustment Stage (malmo_tonedown.py)
- Reviews and refines pronunciation cues
- Balances emphasis tag density
- Maintains language-aware pronunciation rules
- Output: Balanced XML with refined speech cues

5. Final Synthesis Stage (malmo_11labs.py)
- Converts enhanced XML to ElevenLabs format
- Processes dialog and quotation markers
- Handles specialized pause/emphasis indicators
- Output: ElevenLabs-compatible text

Key Data Transformations:
- Text → Semantic Chunks → Tagged Entities → Enhanced Narration → Balanced Speech → Synthesis Format

Data Validation Points:
- Chunk semantic coherence checks
- Entity pronunciation consistency
- Emphasis density validation
- Dialog structure verification

Progress Tracking:
- Step completion status maintained
- Processing metrics captured
- Error states preserved
- Resumable from any pipeline stage

$END$