
START SPECIFICATION:
---
description: Generate high-level technical overviews focusing on core business logic and domain-specific implementations in text-to-speech document processing systems, specifically for projects involving semantic chunking, named entity handling, and speech synthesis optimization
globs: *.py,*.md
alwaysApply: false
---


# main-overview

## Development Guidelines

- Only modify code directly relevant to the specific request. Avoid changing unrelated functionality.
- Never replace code with placeholders like `# ... rest of the processing ...`. Always include complete code.
- Break problems into smaller steps. Think through each step separately before implementing.
- Always provide a complete PLAN with REASONING based on evidence from code and logs before making changes.
- Explain your OBSERVATIONS clearly, then provide REASONING to identify the exact issue. Add console logs when needed to gather more information.


The E11ocutionist system implements a specialized text-to-speech document processing pipeline with five major business components:

1. Document Semantic Analysis (Importance: 95)
- Intelligent chunking system preserving semantic coherence
- Multi-language boundary detection (chapters, scenes, units)
- Hierarchical document structure maintenance
- Semantic unit preservation rules
- Located in: legacy_src/malmo_chunker.py

2. Named Entity Processing (Importance: 90)
- Language-aware entity recognition system
- Multi-language pronunciation adaptation
- Entity tracking and pronunciation consistency
- Located in: legacy_src/malmo_entitizer.py

3. Narration Enhancement (Importance: 85)
- Four-stage text enhancement pipeline:
  * Sentence restructuring for speech
  * Word/symbol normalization
  * Speech-optimized punctuation
  * Emotional emphasis markers
- Located in: legacy_src/malmo_orator.py

4. Pronunciation Management (Importance: 80)
- Two-stage pronunciation review system
- Language-specific pronunciation rules
- Emphasis density control
- Located in: legacy_src/malmo_tonedown.py

5. Speech Synthesis Preparation (Importance: 75)
- Dialog optimization for TTS
- Quote normalization system
- Voice profile management
- Located in: legacy_src/malmo_11labs.py

The system processes documents through these stages sequentially, with each component maintaining state and providing fallback mechanisms. The pipeline emphasizes maintaining semantic meaning while optimizing text for speech synthesis, with particular attention to multi-language support and pronunciation consistency.

Business Workflows:
1. Document ingestion and semantic analysis
2. Named entity detection and pronunciation mapping
3. Speech optimization and emphasis control
4. Voice synthesis preparation
5. Final audio generation

Critical Integrations:
- ElevenLabs API for voice synthesis
- Language model integration for semantic analysis
- Multi-language support system
- Pronunciation dictionary management

$END$
END SPECIFICATION